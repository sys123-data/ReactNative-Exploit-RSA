import './App.css';
import React from 'react'
import { InputList} from './components/input-list.component'

class App extends React.Component {
  constructor() {
    super();
    this.state = {
                      _1st:false,
                      _2nd:false,
                      _3rd:false,
                      _4th:false,
                      _5th:false,
                      _6th:false,
                      _7th:false,
                      _8th:false,
                      _9th:false,
                  step_0:[
                     {
                              val: '248501410365662412791489552646042256782092770118253438700194718631291036762726489658495565276550205113648626040596191969135846656414394584577305526761671104277390765264806022908497647300596494542202565022133435383403344333672279722534625284520459706609569974491538689429548817677759350947931780871046796607829',
                              nume: 'N',
                              label: 'N',
                              id: 1,
                    },
                    
                          {
                              val: '65537',
                              nume: 'e',
                              label: 'e',
                              id: 2,
                          },
                    
                    {
                        val: '13026685992320376966900872608865420374627539408788613307094830638345728123427345410810495082016593339528583880478309351125854158459979947140005048595481921',
                        nume: 'dp',
                        label:'d_p',
                        id: 3,
                    },
                    
                      {
                        val: '194048013822218245260658018019940874060627700835842604475987702337533801266490182061968998210807564778328557627772974110046885380635225974269865976518335375789734689098164529086561756412074742698644530189076800227300946408167039318949544794351233987752575608106800908043533012088081995031010618521695843625062',
                        nume: 'c',
                        label:'c',
                        id: 4,
                      },
                    
                    {
                      val: '2',
                      nume: 'r',
                      label:'r',
                      id: 5,
                    },
                  ],
                  step_1:[
                    {
                      val: '853729919878700545279782488167213055091965050233779350307073915545263984025057936188287416190121477692684801774906959944735103982991705795714510869802098656577',
                      nume: 'e_dp',
                      label:'e * d_p',
                      id: 6,
                    },
                  ],
                  step_2:[
                    {
                      val: '9016251931619471900134891654325616416963014235024228578354571272685898360266018360452389791090601523553654485318638404360595324030293075979910480958518385739558357427754952470521390962912716408800915161865514811327192369457586355334435977829277840040278708603908982776021627948202865858910346914368536701615',
                      nume: 'exp_r',
                      label:'r^(e * d_p) - r',
                      id: 7,
                    },
                  ],
                  step_3:[
                    {
                      val: '16552210630088420359063602469409691246112006092399460047056378989981464655959089848157885458725066456486967346056593120026660668947840276779140541893871393',
                      nume: 'gdc',
                      label:'gcd(r^(e * dp) - r, n) is prime = > gdc(..) = p',
                      id: 8,
                    },
                  ],
                  step_4:[
                    {
                      val: '15013185605186740034227708057626394762531633940631700203311197366887925783946625438484121360496063355757466284381991899709178728990398985814200472641968053',
                      nume: 'q',
                      label:'q = n/p',
                      id: 9,
                    },
                  ],
                  step_5:[
                    {
                      val: '248501410365662412791489552646042256782092770118253438700194718631291036762726489658495565276550205113648626040596191969135846656414394584577305526761671072711994529989645629617187120264510485898562531990973185015826987464281839816819338642513640485479757730057908250844529081838361412708669187530032260768384',
                      nume: 'pq',
                      label:'(p-1)(q-1)',
                      id: 10,
                    },
                  ],
                  step_6:[
                    {
                      val: '246730652493914173678108933742435107630968407946575999148903220186125513254354222531978980309521672440684134099235458007410616017408252675869284078099118615459503548627893268217806215048166643536009642746122421669894289856124316292787804834953729746405356294839069378861612636453029237300351008324750891987713',
                      nume: 'd',
                      label:'d=e^(-1) mod(p-1)(q-1)',
                      id: 11,
                    },
                  ],
                  step_7:[
                    {
                      val: '3670434958110785066911905751469631231338751225710158680692616521935747246580687550712031758787973446252925',
                      nume: 'm',
                      label:'m = c^d mod n',
                      id: 12,
                    },
                  ],
                  step_8:[
                    {
                      val: '666C61677B776F775F6C65616B696E675F64705F627265616B735F7273613F5F36343135313431383136397D',
                      nume: 'm_hex',
                      label:'m_hex',
                      id: 13,
                    },
                  ],
                  step_9:[
                    {
                      val: 'flag{wow_leaking_dp_breaks_rsa?_64151418169}',
                      nume: 'm_ascii',
                      label:'m_ascii',
                      id: 14,
                    },
                  ],
                  };
    
                 
                

    // this.handleChange = this.handleChange.bind(this);
    // this.handleSubmit = this.handleSubmit.bind(this);
    
  }


    

    
    shouldComponentUpdate(nextProps, nextState){
      if(nextState._1st !== this.state._1st ||nextState._2nd !== this.state._2nd || nextState._3rd !== this.state._3rd ||nextState._4th !== this.state._4th ||nextState._5th !== this.state._5th||nextState._6th !== this.state._6th ||nextState._7th !== this.state._7th||nextState._8th !== this.state._8th ||nextState._9th !== this.state._9th ){
        return true;
      }
      return false;
    }
      
  render()
    {
      const render_step1=()=>{
        if (this.state._1st === false) return <p></p>;
        return <InputList elements={this.state.step_1}/> ;
              
      }
      const render_step2=()=>{
        if (this.state._2nd === false) return <p></p>;
        return <InputList elements={this.state.step_2}/> ;
      }
      const render_step3=()=>{
        if (this.state._3rd === false) return <p></p>;
        return <InputList elements={this.state.step_3}/> ;
      }
      const render_step4=()=>{
        if (this.state._4th === false) return <p></p>;
        return <InputList elements={this.state.step_4}/> ;
      }

      const render_step5=()=>{
        if (this.state._5th === false) return <p></p>;
        return <InputList elements={this.state.step_5}/> ;
      }

      const render_step6=()=>{
        if (this.state._6th === false) return <p></p>;
        return <InputList elements={this.state.step_6}/> ;
      }

      const render_step7=()=>{
        if (this.state._7th === false) return <p></p>;
        return <InputList elements={this.state.step_7}/> ;
      }

      const render_step8=()=>{
        if (this.state._8th === false) return <p></p>;
        return <InputList elements={this.state.step_8}/> ;
      }

      const render_step9=()=>{
        if (this.state._9th === false) return <p></p>;
        return <InputList elements={this.state.step_9}/> ;
      }

      const button_step2=()=>{
        if (this.state._1st === false) return <p></p>;
        return <a href="#btm"><button onClick={()=>_2nd_step()} className='btn_2'>Step 2</button></a> ;
      }

      const button_step3=()=>{
        if (this.state._2nd === false) return <p></p>;
        return <a href="#btm"><button onClick={()=>_3rd_step()} className='btn_3'>Step 3</button></a> ;
      }
      
      const button_step4=()=>{
        if (this.state._3rd === false) return <p></p>;
        return <a href="#btm"><button onClick={()=>_4th_step()} className='btn_4'>Step 4</button></a> ;
      }

      const button_step5=()=>{
        if (this.state._4th === false) return <p></p>;
        return <a href="#btm"><button onClick={()=>_5th_step()} className='btn_5'>Step 5</button></a> ;
      }

      const button_step6=()=>{
        if (this.state._5th === false) return <p></p>;
        return <a href="#btm"><button onClick={()=>_6th_step()} className='btn_6'>Step 6</button></a> ;
      }

      const button_step7=()=>{
        if (this.state._6th === false) return <p></p>;
        return <a href="#btm"><button onClick={()=>_7th_step()} className='btn_7'>Step 7</button></a> ;
      }

      const button_step8=()=>{
        if (this.state._7th === false) return <p></p>;
        return <a href="#btm"><button onClick={()=>_8th_step()} className='btn_8'>Step 8</button></a> ;
      }

      const button_step9=()=>{
        if (this.state._8th === false) return <p></p>;
        return <a href="#btm"><button onClick={()=>_9th_step()} className='btn_9'>Step 9</button></a>;
      }

      const execute = (n)=>{
        for (let x = n ; x<10 ;x++)
        {   
          if (x==1) this.setState({_1st:false});
          if (x==2) this.setState({_2nd:false});
          if (x==3) this.setState({_3rd:false});
          if (x==4) this.setState({_4th:false});
          if (x==5) this.setState({_5th:false});
          if (x==6) this.setState({_6th:false});
          if (x==7) this.setState({_7th:false});
          if (x==8) this.setState({_8th:false});
          if (x==9) this.setState({_9th:false});
          //if (x>3) eval('this.setState({_'+x+'th:false})');
        }
      } 

      const _1st_step = ()=>{
        
        if (this.state._1st === false)
            
              this.setState({_1st: true});

        else
        //       this.setState({_1st: false});
              execute(1);
           
      }
      const _2nd_step = ()=>{
  
        if (this.state._2nd === false)   
              this.setState({_2nd: true});
        else
        //       this.setState({_2nd: false});
                execute(2);
      }   

      const _3rd_step = ()=>{
  
        if (this.state._3rd === false)   
               this.setState({_3rd: true});
        else
        //       this.setState({_3rd: false});
           execute(3);
      }   

      const _4th_step = ()=>{
  
        if (this.state._4th === false)   
               this.setState({_4th: true});
        else
                // this.setState({_4th: false});
               execute(4);
      }   

      const _5th_step = ()=>{
  
        if (this.state._5th === false)   
               this.setState({_5th: true});
        else
        //         this.setState({_5th: false});
               execute(5);
      }   

      const _6th_step = ()=>{
  
        if (this.state._6th === false)   
               this.setState({_6th: true});
        else
        //        this.setState({_6th: false});        
               execute(6);
      }   

      const _7th_step = ()=>{
  
        if (this.state._7th === false)   
               this.setState({_7th: true});
        else
        //       this.setState({_7th: false});        
        execute(7);
      }   

      const _8th_step = ()=>{
  
        if (this.state._8th === false)   
               this.setState({_8th: true});
        else
        //         this.setState({_8th: false});
        execute(8);
      }   

      const _9th_step = ()=>{
  
        if (this.state._9th === false)   
               this.setState({_9th: true});
        else
        //         this.setState({_9th: false});        
        execute(9);
      }   

      return(

    <div className="App">
      <header className="App-header">
        <a href="#btm"><h1 className='H_1' id="h_1">Exploit RSA</h1></a>
      </header>
      <InputList elements={this.state.step_0}/><a href="#btm">
      <button onClick={()=>_1st_step()} className='btn_1'>Step 1</button></a>
        {render_step1()}
        {button_step2()}
        {render_step2()}
        {button_step3()}
        {render_step3()}
        {button_step4()}
        {render_step4()}
        {button_step5()}
        {render_step5()}
        {button_step6()}
        {render_step6()}
        {button_step7()}
        {render_step7()}
        {button_step8()}
        {render_step8()}
        {button_step9()}
        {render_step9()}
        <a href="#h_1"><button className='btn_back'>Up</button></a>
        <footer className="App-footer"> 
          <p id="btm">&#169; 2021 Georgian Nicolae. All Rights Reserved.</p>
        </footer>
    </div>
      );
   }
};


export default App;
